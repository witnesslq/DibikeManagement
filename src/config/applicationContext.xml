<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop   
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:component-scan base-package="com.*" >
	</context:component-scan> 
	<!-- 启用annotation配置 -->
	<context:annotation-config />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config/mysql.properties" />
	</bean>

	<!-- spring数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<bean id="dataSource" name="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>${jdbc.driverClassName}</value>
		</property>
		<property name="url">
			<value>${jdbc.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource">
		</property>
		<!-- 自动扫描注解方式配置的hibernate类文件 -->
		<property name="annotatedClasses">
			<list>
				<value>com.Dibike.entity.Action_role</value>
				<value>com.Dibike.entity.Action</value>
				<value>com.Dibike.entity.ActionCloumn</value>
				<value>com.Dibike.entity.Bike_fault</value>
				<value>com.Dibike.entity.Certification</value>
				<value>com.Dibike.entity.Journey_details</value>
				<value>com.Dibike.entity.Journey</value>
				<value>com.Dibike.entity.Manage_role</value>
				<value>com.Dibike.entity.Manage</value>
				<value>com.Dibike.entity.Member</value>
				<value>com.Dibike.entity.MemberInfo</value>
				<value>com.Dibike.entity.Role</value>
				<value>com.Dibike.entity.Sms</value>
				<value>com.Dibike.entity.Student_certification</value>
				<value>com.Dibike.entity.Versions</value>
				<value>com.Dibike.entity.Wallet</value>
				<value>com.Dibike.entity.Bike</value>
				<value>com.Dibike.entity.Point</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="connection.characterEncoding">utf8</prop>
 
				<prop key="hibernate.show_sql">true</prop>
				<!-- 显示sql数据 -->
				<prop key="format_sql">true</prop>

				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="connection.autocommit">true</prop>
				<!-- spring中如果想通过sessionFactory.getCurrentSession获得当前session,必须配置sessionFactory和thread绑定。 -->
					<prop key="hibernate.current_session_context_class">thread</prop> 

				<prop key="cache.use_query_cache">true</prop>
				<prop key="cache.provider_configuration_file_resource_path">/ehcache.xml</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory
				</prop>

				<!-- <prop key="hibernate.c3p0.min_size">5</prop> <prop key="hibernate.c3p0.max_size">30</prop> 
					<prop key="hibernate.c3p0.timeout">300</prop> <prop key="hibernate.c3p0.max_statements">100</prop> 
					<prop key="hibernate.c3p0.idle_test_period">3000</prop> <prop key="javax.persistence.validation.mode">none</prop> -->
			</props>
		</property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 配置事务异常封装 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 配置事务通知属性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 定义事务传播属性 -->
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="new*" propagation="REQUIRED" />
			<tx:method name="set*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="change*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="load*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* *..*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config> 
</beans>